@model SchoolERPSYSTEM.Models.SubjectMarks

@{
    ViewBag.Title = "AddSubjectMark";
    Layout = "~/Views/Teacher.cshtml";
}

<div class="page-wrapper">
    <!-- ============================================================== -->
    <!-- Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class="page-breadcrumb">
        <div class="row">
            <div class="col-12 d-flex no-block align-items-center">
                <h4 class="page-title">Settings</h4>
                <div class="ml-auto text-right">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Teacher</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <!-- ============================================================== -->
    <!-- Container fluid  -->
    <!-- ============================================================== -->
    <div class="container-fluid">
        <!-- ============================================================== -->
        <!-- Start Page Content -->
        <!-- ============================================================== -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title m-b-0"><i class="  fas fa-book"></i> Subject Mark</h5>
                    </div>



                    <div class="row">

                        <div class="card-body">

    @using (Html.BeginForm("InsertSubjectMark", "TeacherClass", FormMethod.Post))
    {
        @Html.AntiForgeryToken()


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">

            <div class="col-md-6">
                <div class="form-group">

                    @Html.LabelFor(model => model.StudentName,"Student Name", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.DropDownListFor(model => model.StudentName, ViewData["Id"] as List<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Session,"Session", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.DropDownListFor(model => model.Session, new SelectList(ViewBag.Session, "SessionID", "Session"), "--Select--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Term, "Term", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Subject,"Subject", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.DropDownListFor(model => model.Subject, new SelectList(ViewBag.Subject, "SubjectID", "Subject1"), "--Select--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Class,"Class", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownListFor(model => model.Class, new SelectList(ViewBag.Level, "LevelID", "Levelname"), "--Select--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.firstCa,"1st CA", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.firstCa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstCa, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.SecondCa,"2nd CA", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.SecondCa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SecondCa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Exam,"Exam", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Exam, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Exam, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Total, "Total", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Grade, "Grade", htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>

                    }
                </div>
            </div>
                    </div>
                        </div>
        </div>
    </div>
    

   
